{"ast":null,"code":"import _slicedToArray from \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js\";\nimport React, { useState } from 'react';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\nvar Website = function Website(_ref) {\n  var selectedtags = _ref.selectedtags,\n    articles = _ref.articles;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedArticleId = _useState2[0],\n    setSelectedArticleId = _useState2[1];\n  var handleArticleClick = function handleArticleClick(id) {\n    setSelectedArticleId(function (prevId) {\n      return prevId === id ? null : id;\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"website-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsButtons, {\n    selectedtags: selectedtags,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"news-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, articles.map(function (article, index) {\n    // Destructure the article information based on your data structure\n    var _article = _slicedToArray(article, 6),\n      id = _article[0],\n      title = _article[1],\n      link = _article[2],\n      summary = _article[3],\n      category = _article[4],\n      imageUrl = _article[5]; // Then use these constants to build your list items\n    // Remember to use 'key' prop when mapping to ensure React can track each element uniquely\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id || index,\n      className: \"news-article \".concat(selectedArticleId === article.id ? 'open' : ''),\n      onClick: function onClick() {\n        return handleArticleClick(article.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, title)), selectedArticleId === article.id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, imageUrl && /*#__PURE__*/React.createElement(\"img\", {\n      src: imageUrl,\n      alt: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 50\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }\n    }, summary)));\n  })));\n};\nexport default Website;","map":{"version":3,"names":["React","useState","NewsButtons","Website","_ref","selectedtags","articles","_useState","_useState2","_slicedToArray","selectedArticleId","setSelectedArticleId","handleArticleClick","id","prevId","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","article","index","_article","title","link","summary","category","imageUrl","key","concat","onClick","Fragment","src","alt"],"sources":["/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\n\nconst Website = ({ selectedtags, articles }) => {\n    const [selectedArticleId, setSelectedArticleId] = useState(null);\n\n    const handleArticleClick = (id) => {\n        setSelectedArticleId(prevId => prevId === id ? null : id);\n    };\n\n    \n    return (\n        <div className=\"website-container\">\n            <NewsButtons selectedtags={selectedtags} />\n                <ul className=\"news-list\">\n                        {articles.map((article, index) => {\n                        // Destructure the article information based on your data structure\n                        const [id, title, link, summary, category, imageUrl] = article;\n\n                        // Then use these constants to build your list items\n                        // Remember to use 'key' prop when mapping to ensure React can track each element uniquely\n                        return (\n                        <li key={id || index} className={`news-article ${selectedArticleId === article.id ? 'open' : ''}`} onClick={() => handleArticleClick(article.id)}>\n                        <div className=\"header\">\n                        <h2>{title}</h2>\n                        </div>\n                        {selectedArticleId === article.id && (\n                            <>\n                                <div className=\"image-container\">\n                                    {/* Conditional rendering if image exists */}\n                                    {imageUrl && <img src={imageUrl} alt={title} />}\n                                </div>\n                                <p>{summary}</p>\n                            </>\n                        )}\n                    </li>\n                );\n            })}\n          </ul>\n        </div>\n    );\n};\n\nexport default Website;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAAmC;EAAA,IAA7BC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,IAAAC,SAAA,GACaN,QAAQ,CAAC,IAAI,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzDG,iBAAiB,GAAAF,UAAA;IAAEG,oBAAoB,GAAAH,UAAA;EAE9C,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,EAAE,EAAK;IAC/BF,oBAAoB,CAAC,UAAAG,MAAM;MAAA,OAAIA,MAAM,KAAKD,EAAE,GAAG,IAAI,GAAGA,EAAE;IAAA,EAAC;EAC7D,CAAC;EAGD,oBACIb,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BvB,KAAA,CAAAe,aAAA,CAACb,WAAW;IAACG,YAAY,EAAEA,YAAa;IAAAY,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvCvB,KAAA,CAAAe,aAAA;IAAIC,SAAS,EAAC,WAAW;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChBjB,QAAQ,CAACkB,GAAG,CAAC,UAACC,OAAO,EAAEC,KAAK,EAAK;IAClC;IAAA,IAAAC,QAAA,GAAAlB,cAAA,CACuDgB,OAAO;MAAvDZ,EAAE,GAAAc,QAAA;MAAEC,KAAK,GAAAD,QAAA;MAAEE,IAAI,GAAAF,QAAA;MAAEG,OAAO,GAAAH,QAAA;MAAEI,QAAQ,GAAAJ,QAAA;MAAEK,QAAQ,GAAAL,QAAA,KAEnD;IACA;IACA,oBACA3B,KAAA,CAAAe,aAAA;MAAIkB,GAAG,EAAEpB,EAAE,IAAIa,KAAM;MAACV,SAAS,kBAAAkB,MAAA,CAAkBxB,iBAAiB,KAAKe,OAAO,CAACZ,EAAE,GAAG,MAAM,GAAG,EAAE,CAAG;MAACsB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMvB,kBAAkB,CAACa,OAAO,CAACZ,EAAE,CAAC;MAAA,CAAC;MAAAI,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACjJvB,KAAA,CAAAe,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACvBvB,KAAA,CAAAe,aAAA;MAAAE,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKK,KAAU,CACV,CAAC,EACLlB,iBAAiB,KAAKe,OAAO,CAACZ,EAAE,iBAC7Bb,KAAA,CAAAe,aAAA,CAAAf,KAAA,CAAAoC,QAAA,qBACIpC,KAAA,CAAAe,aAAA;MAAKC,SAAS,EAAC,iBAAiB;MAAAC,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAE3BS,QAAQ,iBAAIhC,KAAA,CAAAe,aAAA;MAAKsB,GAAG,EAAEL,QAAS;MAACM,GAAG,EAAEV,KAAM;MAAAX,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC7C,CAAC,eACNvB,KAAA,CAAAe,aAAA;MAAAE,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAIO,OAAW,CACjB,CAEN,CAAC;EAEb,CAAC,CACC,CACD,CAAC;AAEd,CAAC;AAED,eAAe3B,OAAO"},"metadata":{},"sourceType":"module"}