{"ast":null,"code":"import _slicedToArray from \"/Users/valeria/Desktop/phd/TYP/ScrapperNieuws/chatbot-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/valeria/Desktop/phd/TYP/ScrapperNieuws/chatbot-interface/src/components/Chatbot/Chatbot.js\";\nimport React, { useState } from 'react';\nimport ChatbotInput from './Chat/ChatbotInput';\nimport ChatbotMessage from './Chat/ChatbotMessage';\nimport '../styles/Chatbot.css';\nimport { mockData } from '..//Users/valeria/Desktop/phd/TYP/ScrapperNieuws/chatbot-interface/src/mockData.js'; // Import the mock data\n\nvar Chatbot = function Chatbot(_ref) {\n  var selectedCategories = _ref.selectedCategories;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    filteredNewsData = _useState2[0],\n    setFilteredNewsData = _useState2[1];\n  var handleUserMessage = function handleUserMessage(message) {\n    // Check if the user is asking for specific news items\n    if (message.toLowerCase().includes('technology')) {\n      var requestedCategory = selectedCategories.find(function (category) {\n        return message.toLowerCase().includes(category.toLowerCase());\n      });\n      if (requestedCategory) {\n        filterNewsData(requestedCategory);\n      }\n    }\n  };\n  var handleButtonClick = function handleButtonClick(category) {\n    filterNewsData(category);\n  };\n  var filterNewsData = function filterNewsData(filter) {\n    var filteredData = mockData.filter(function (article) {\n      return article.category.toLowerCase() === filter.toLowerCase();\n    });\n    setFilteredNewsData(filteredData);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-buttons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, selectedCategories.map(function (category) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: category,\n      onClick: function onClick() {\n        return handleButtonClick(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, category);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filtered-news\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, filteredNewsData.map(function (article) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: article.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, article.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, article.content));\n  })));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","ChatbotInput","ChatbotMessage","mockData","Chatbot","_ref","selectedCategories","_useState","_useState2","_slicedToArray","filteredNewsData","setFilteredNewsData","handleUserMessage","message","toLowerCase","includes","requestedCategory","find","category","filterNewsData","handleButtonClick","filter","filteredData","article","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","id","title","content"],"sources":["/Users/valeria/Desktop/phd/TYP/ScrapperNieuws/chatbot-interface/src/components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatbotInput from './Chat/ChatbotInput';\nimport ChatbotMessage from './Chat/ChatbotMessage';\nimport '../styles/Chatbot.css';\nimport { mockData } from '..//Users/valeria/Desktop/phd/TYP/ScrapperNieuws/chatbot-interface/src/mockData.js';  // Import the mock data\n\nconst Chatbot = ({ selectedCategories }) => {\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n\n  const handleUserMessage = (message) => {\n    // Check if the user is asking for specific news items\n    if (message.toLowerCase().includes('technology')) {\n      const requestedCategory = selectedCategories.find(category =>\n        message.toLowerCase().includes(category.toLowerCase())\n      );\n      if (requestedCategory) {\n        filterNewsData(requestedCategory);\n      }\n    }\n  };\n\n  const handleButtonClick = (category) => {\n    filterNewsData(category);\n  };\n\n  const filterNewsData = (filter) => {\n    const filteredData = mockData.filter(article =>\n      article.category.toLowerCase() === filter.toLowerCase()\n    );\n    setFilteredNewsData(filteredData);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      {/* Render buttons for selected categories */}\n      <div className=\"category-buttons\">\n        {selectedCategories.map(category => (\n          <button key={category} onClick={() => handleButtonClick(category)}>\n            {category}\n          </button>\n        ))}\n      </div>\n      {/* ... rest of your chat UI, including an input field for user messages ... */}\n      {/* Render filtered news data */}\n      <div className=\"filtered-news\">\n        {filteredNewsData.map(article => (\n          <div key={article.id}>\n            <h2>{article.title}</h2>\n            <p>{article.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module"}