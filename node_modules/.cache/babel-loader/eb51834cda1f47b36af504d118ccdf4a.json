{"ast":null,"code":"import _slicedToArray from \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js\";\nimport React, { useState } from 'react';\nimport { useLocation, Navigate } from 'react-router-dom';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\nvar Website = function Website(_ref) {\n  var articles = _ref.articles;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedArticleId = _useState2[0],\n    setSelectedArticleId = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredCategory = _useState4[0],\n    setFilteredCategory = _useState4[1];\n  var location = useLocation(); // Use useLocation hook to access location\n  // Redirect back to category selection if no categories have been selected\n  if (!location.state || !location.state.selectedCategories) {\n    return /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/news-preferences\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 16\n      }\n    });\n  }\n  var handleArticleClick = function handleArticleClick(id) {\n    setSelectedArticleId(function (prevId) {\n      return prevId === id ? null : id;\n    });\n  };\n  var filterArticlesByCategory = function filterArticlesByCategory(category) {\n    setFilteredCategory(category);\n  };\n  var selectedCategories = location.state.selectedCategories; // Get the selectedCategories prop from location\n\n  // Filter articles based on selected categories\n  var filteredArticles = filteredCategory ? articles.filter(function (article) {\n    return article.category === filteredCategory;\n  }) : articles;\n  var splitIntoSentences = function splitIntoSentences(text) {\n    return text.split('.');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"website-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsButtons, {\n    selectedCategories: selectedCategories,\n    onCategoryClick: filterArticlesByCategory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"news-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, filteredArticles.map(function (article, index) {\n    // Assuming articles is an array of arrays, with structure based on your previous data\n    var id = index; // Using index as a fallback ID\n    var title = article[6]; // Assuming the first element is the title\n    var content = article[2]; // Assuming the second element is the content\n    var image = article[5]; // Assuming the fourth element is the image URL\n    // Split content into paragraphs based on double line breaks\n    var paragraphs = splitIntoSentences(content);\n    // Get the first paragraph\n    var firstParagraph = paragraphs[0];\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: \"news-article \".concat(selectedArticleId === id ? 'open' : ''),\n      onClick: function onClick() {\n        return handleArticleClick(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, title)), selectedArticleId === id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, image && /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, firstParagraph)));\n  })));\n};\nexport default Website;","map":{"version":3,"names":["React","useState","useLocation","Navigate","NewsButtons","Website","_ref","articles","_useState","_useState2","_slicedToArray","selectedArticleId","setSelectedArticleId","_useState3","_useState4","filteredCategory","setFilteredCategory","location","state","selectedCategories","createElement","to","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","handleArticleClick","id","prevId","filterArticlesByCategory","category","filteredArticles","filter","article","splitIntoSentences","text","split","className","onCategoryClick","map","index","title","content","image","paragraphs","firstParagraph","key","concat","onClick","Fragment","src","alt"],"sources":["/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, Navigate } from 'react-router-dom';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\n\nconst Website = ({  articles }) => {\n    const [selectedArticleId, setSelectedArticleId] = useState(null);\n    const [filteredCategory, setFilteredCategory] = useState(null);\n    const location = useLocation(); // Use useLocation hook to access location\n    // Redirect back to category selection if no categories have been selected\n    if (!location.state || !location.state.selectedCategories) {\n        return <Navigate to=\"/news-preferences\" />;\n    }\n    const handleArticleClick = (id) => {\n        setSelectedArticleId(prevId => prevId === id ? null : id);\n    };\n    const filterArticlesByCategory = (category) => {\n        setFilteredCategory(category);\n    };\n    const selectedCategories = location.state.selectedCategories; // Get the selectedCategories prop from location\n\n    // Filter articles based on selected categories\n    const filteredArticles = filteredCategory\n    ? articles.filter((article) => article.category === filteredCategory)\n    : articles;\n    const splitIntoSentences = (text) => {\n        return text.split('.');\n      };\n\n    return (\n        <div className=\"website-container\">\n            <NewsButtons\n                    selectedCategories={selectedCategories}\n                    onCategoryClick={filterArticlesByCategory}\n                />            \n                <ul className=\"news-list\">\n                {filteredArticles.map((article, index) => {\n                    // Assuming articles is an array of arrays, with structure based on your previous data\n                    const id = index; // Using index as a fallback ID\n                    const title = article[6]; // Assuming the first element is the title\n                    const content = article[2]; // Assuming the second element is the content\n                    const image = article[5]; // Assuming the fourth element is the image URL\n                    // Split content into paragraphs based on double line breaks\n                    const paragraphs = splitIntoSentences(content);\n                    // Get the first paragraph\n                    const firstParagraph = paragraphs[0];\n                    return (\n                        <li key={id} className={`news-article ${selectedArticleId === id ? 'open' : ''}`} onClick={() => handleArticleClick(id)}>\n                            <div className=\"header\">\n                                <h2>{title}</h2>\n                            </div>\n                            {selectedArticleId === id && (\n                                <>\n                                    <div className=\"image-container\">\n                                        {/* Conditional rendering if image exists */}\n                                        {image && <img src={image} alt={title} />}\n                                    </div>\n                                    <p>{firstParagraph}</p>\n                                </>\n                            )}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Website;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}