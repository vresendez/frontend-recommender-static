{"ast":null,"code":"import _slicedToArray from \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js\";\nimport React, { useState } from 'react';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\nvar Website = function Website(_ref) {\n  var articles = _ref.articles,\n    location = _ref.location;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedArticleId = _useState2[0],\n    setSelectedArticleId = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredCategory = _useState4[0],\n    setFilteredCategory = _useState4[1];\n  var handleArticleClick = function handleArticleClick(id) {\n    setSelectedArticleId(function (prevId) {\n      return prevId === id ? null : id;\n    });\n  };\n  var filterArticlesByCategory = function filterArticlesByCategory(category) {\n    setFilteredCategory(category);\n  };\n  var selectedCategories = location.state.selectedCategories; // Get the selectedCategories prop from location\n\n  // Filter articles based on selected categories\n  var filteredArticles = filteredCategory ? articles.filter(function (article) {\n    return article.category === filteredCategory;\n  }) : articles;\n  var splitIntoSentences = function splitIntoSentences(text) {\n    return text.split('.');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"website-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewsButtons, {\n    selectedCategories: selectedCategories,\n    onCategoryClick: filterArticlesByCategory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"news-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, articles.map(function (article, index) {\n    // Assuming articles is an array of arrays, with structure based on your previous data\n    var id = index; // Using index as a fallback ID\n    var title = article[6]; // Assuming the first element is the title\n    var content = article[2]; // Assuming the second element is the content\n    var image = article[4]; // Assuming the fourth element is the image URL\n    // Split content into paragraphs based on double line breaks\n    var paragraphs = splitIntoSentences(content);\n    // Get the first paragraph\n    var firstParagraph = paragraphs[0];\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: \"news-article \".concat(selectedArticleId === id ? 'open' : ''),\n      onClick: function onClick() {\n        return handleArticleClick(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, title)), selectedArticleId === id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, image && /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, firstParagraph)));\n  })));\n};\nexport default Website;","map":{"version":3,"names":["React","useState","NewsButtons","Website","_ref","articles","location","_useState","_useState2","_slicedToArray","selectedArticleId","setSelectedArticleId","_useState3","_useState4","filteredCategory","setFilteredCategory","handleArticleClick","id","prevId","filterArticlesByCategory","category","selectedCategories","state","filteredArticles","filter","article","splitIntoSentences","text","split","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onCategoryClick","map","index","title","content","image","paragraphs","firstParagraph","key","concat","onClick","Fragment","src","alt"],"sources":["/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Website/Website.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Website.css';\nimport NewsButtons from './NewsButtons.js';\n\nconst Website = ({  articles, location }) => {\n    const [selectedArticleId, setSelectedArticleId] = useState(null);\n    const [filteredCategory, setFilteredCategory] = useState(null);\n\n    const handleArticleClick = (id) => {\n        setSelectedArticleId(prevId => prevId === id ? null : id);\n    };\n    const filterArticlesByCategory = (category) => {\n        setFilteredCategory(category);\n    };\n    const selectedCategories = location.state.selectedCategories; // Get the selectedCategories prop from location\n\n    // Filter articles based on selected categories\n    const filteredArticles = filteredCategory\n    ? articles.filter((article) => article.category === filteredCategory)\n    : articles;\n    const splitIntoSentences = (text) => {\n        return text.split('.');\n      };\n\n    return (\n        <div className=\"website-container\">\n            <NewsButtons\n                    selectedCategories={selectedCategories}\n                    onCategoryClick={filterArticlesByCategory}\n                />            \n                <ul className=\"news-list\">\n                {articles.map((article, index) => {\n                    // Assuming articles is an array of arrays, with structure based on your previous data\n                    const id = index; // Using index as a fallback ID\n                    const title = article[6]; // Assuming the first element is the title\n                    const content = article[2]; // Assuming the second element is the content\n                    const image = article[4]; // Assuming the fourth element is the image URL\n                    // Split content into paragraphs based on double line breaks\n                    const paragraphs = splitIntoSentences(content);\n                    // Get the first paragraph\n                    const firstParagraph = paragraphs[0];\n                    return (\n                        <li key={id} className={`news-article ${selectedArticleId === id ? 'open' : ''}`} onClick={() => handleArticleClick(id)}>\n                            <div className=\"header\">\n                                <h2>{title}</h2>\n                            </div>\n                            {selectedArticleId === id && (\n                                <>\n                                    <div className=\"image-container\">\n                                        {/* Conditional rendering if image exists */}\n                                        {image && <img src={image} alt={title} />}\n                                    </div>\n                                    <p>{firstParagraph}</p>\n                                </>\n                            )}\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Website;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}