{"ast":null,"code":"import _slicedToArray from \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Chatbot/Chatbot.js\";\nimport React, { useState } from 'react';\n// import ChatbotInput from './Chat/ChatbotInput';\n// import ChatbotMessage from './Chat/ChatbotMessage';\nimport { useParams } from 'react-router-dom';\nimport '../styles/Chatbot.css';\nvar Chatbot = function Chatbot(_ref) {\n  var selectedCategories = _ref.selectedCategories;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredNewsData = _useState4[0],\n    setFilteredNewsData = _useState4[1];\n  var _useParams = useParams(),\n    participantID = _useParams.participantID;\n  var _useParams2 = useParams(),\n    age = _useParams2.age;\n  var _useParams3 = useParams(),\n    location = _useParams3.location;\n  var _useParams4 = useParams(),\n    gender = _useParams4.gender;\n  var _useParams5 = useParams(),\n    education = _useParams5.education;\n  var _useParams6 = useParams(),\n    condition = _useParams6.condition; // The src string with the participantID dynamically included\n  var iframeSrc = \"https://europe.webchat.botframework.com/embed/JosBotNL?s=0RTzI3dqyBM.7Jjjkfy5Xmgu6DaGi8SbSMvhytqaE4uy5CQvCOaDMFc&userID=\".concat(participantID, \"test&username=josbot_\").concat(condition);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    src: iframeSrc,\n    style: {\n      minWidth: '300px',\n      width: '100%',\n      minHeight: '700px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useParams","Chatbot","_ref","selectedCategories","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","filteredNewsData","setFilteredNewsData","_useParams","participantID","_useParams2","age","_useParams3","location","_useParams4","gender","_useParams5","education","_useParams6","condition","iframeSrc","concat","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","style","minWidth","width","minHeight"],"sources":["/Users/valeria/Desktop/phd/TYP/Chatbot/chatbot-interface/src/components/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n// import ChatbotInput from './Chat/ChatbotInput';\n// import ChatbotMessage from './Chat/ChatbotMessage';\nimport { useParams } from 'react-router-dom';\n\nimport '../styles/Chatbot.css';\n\nconst Chatbot = ({ selectedCategories }) => {\n  const [messages, setMessages] = useState([]);\n  const [filteredNewsData, setFilteredNewsData] = useState([]);\n  const {participantID} = useParams();\n  let {age} = useParams();\n  let {location} = useParams();\n  let {gender} = useParams();\n  let {education} = useParams();\n  let {condition} = useParams();\n  // The src string with the participantID dynamically included\n  const iframeSrc = `https://europe.webchat.botframework.com/embed/JosBotNL?s=0RTzI3dqyBM.7Jjjkfy5Xmgu6DaGi8SbSMvhytqaE4uy5CQvCOaDMFc&userID=${participantID}test&username=josbot_${condition}`;\n\n  \n\n  return (\n    <div className=\"chatbot\">\n      \n      <iframe\n        src={iframeSrc} \n         style={{ minWidth: '300px', width: '100%', minHeight: '700px' }}\n      ></iframe>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,uBAAuB;AAE9B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,kBAAkB,GAAAD,IAAA,CAAlBC,kBAAkB;EAAA,IAAAC,SAAA,GACHL,QAAQ,CAAC,EAAE,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACoBV,QAAQ,CAAC,EAAE,CAAC;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACpBb,SAAS,CAAC,CAAC;IAA5Bc,aAAa,GAAAD,UAAA,CAAbC,aAAa;EAAA,IAAAC,WAAA,GACRf,SAAS,CAAC,CAAC;IAAlBgB,GAAG,GAAAD,WAAA,CAAHC,GAAG;EAAA,IAAAC,WAAA,GACSjB,SAAS,CAAC,CAAC;IAAvBkB,QAAQ,GAAAD,WAAA,CAARC,QAAQ;EAAA,IAAAC,WAAA,GACEnB,SAAS,CAAC,CAAC;IAArBoB,MAAM,GAAAD,WAAA,CAANC,MAAM;EAAA,IAAAC,WAAA,GACOrB,SAAS,CAAC,CAAC;IAAxBsB,SAAS,GAAAD,WAAA,CAATC,SAAS;EAAA,IAAAC,WAAA,GACIvB,SAAS,CAAC,CAAC;IAAxBwB,SAAS,GAAAD,WAAA,CAATC,SAAS,EACd;EACA,IAAMC,SAAS,8HAAAC,MAAA,CAA8HZ,aAAa,2BAAAY,MAAA,CAAwBF,SAAS,CAAE;EAI7L,oBACE1B,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEtBrC,KAAA,CAAA6B,aAAA;IACES,GAAG,EAAEX,SAAU;IACdY,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,KAAK,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAX,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC1D,CACN,CAAC;AAEV,CAAC;AAED,eAAelC,OAAO"},"metadata":{},"sourceType":"module"}